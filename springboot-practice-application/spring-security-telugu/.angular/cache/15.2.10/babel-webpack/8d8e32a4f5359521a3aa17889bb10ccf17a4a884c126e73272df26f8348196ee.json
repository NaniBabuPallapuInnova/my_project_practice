{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet CreateEmployeeComponent = class CreateEmployeeComponent {\n  constructor(formBuilder, employeeService, router, activatedRoute) {\n    this.formBuilder = formBuilder;\n    this.employeeService = employeeService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.newEmployee = {};\n  }\n  ngOnInit() {\n    this.employeeFormGroup = this.formBuilder.group({\n      name_: ['', [Validators.required]],\n      email_: ['', [Validators.email, Validators.required]],\n      phone_: ['', [Validators.maxLength(10)]],\n      salary_: ['', [Validators.required]],\n      doj_: ['', [Validators.required]]\n    });\n    this.activatedRoute.params.subscribe(param => {\n      let id = Number(param['id']);\n      console.log('print id : ' + id);\n      this.fetchAndInitializeValuesForUpdating(id);\n    });\n  }\n  registerEmployee() {\n    this.newEmployee.name = this.employeeFormGroup.controls['name_'].value;\n    this.newEmployee.email = this.employeeFormGroup.controls['email_'].value;\n    this.newEmployee.phone = this.employeeFormGroup.controls['phone_'].value;\n    this.newEmployee.salary = this.employeeFormGroup.controls['salary_'].value;\n    this.newEmployee.dateOfJoining = this.employeeFormGroup.controls['doj_'].value;\n    this.employeeService.createEmployee(this.newEmployee).subscribe(data => {\n      console.log(\"Employee has been created\", data);\n    });\n    this.employeeService.redirectTo('/');\n  }\n  fetchAndInitializeValuesForUpdating(id) {\n    this.employeeService.getEmployeeById(id).subscribe(data => {\n      this.employeeFormGroup.controls['name_'].setValue(data.name);\n      this.employeeFormGroup.controls['email_'].setValue(data.email);\n      this.employeeFormGroup.controls['phone_'].setValue(data.phone);\n      this.employeeFormGroup.controls['salary_'].setValue(data.salary);\n      this.employeeFormGroup.controls['doj_'].setValue(data.dateOfJoining);\n    });\n  }\n};\nCreateEmployeeComponent = __decorate([Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.scss']\n})], CreateEmployeeComponent);\nexport { CreateEmployeeComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAU5D,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAOlCC,YAAoBC,WAAwB,EAAUC,eAAiC,EAAUC,MAAe,EAAUC,cAA+B;IAArI,gBAAW,GAAXH,WAAW;IAAuB,oBAAe,GAAfC,eAAe;IAA4B,WAAM,GAANC,MAAM;IAAmB,mBAAc,GAAdC,cAAc;IALxI,gBAAW,GAAa,EAAc;EAOtC;EACAC,QAAQ;IAEN,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MAE9CC,KAAK,EAAG,CAAC,EAAE,EAAE,CAAEV,UAAU,CAACW,QAAQ,CAAC,CAAC;MACpCC,MAAM,EAAG,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACa,KAAK,EAACb,UAAU,CAACW,QAAQ,CAAC,CAAC;MACrDG,MAAM,EAAG,CAAC,EAAE,EAAE,CAACd,UAAU,CAACe,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACzCC,OAAO,EAAG,CAAC,EAAE,EAAE,CAAEhB,UAAU,CAACW,QAAQ,CAAC,CAAC;MACtCM,IAAI,EAAG,CAAC,EAAE,EAAE,CAACjB,UAAU,CAACW,QAAQ,CAAC;KAClC,CAAC;IAEF,IAAI,CAACL,cAAc,CAACY,MAAM,CAACC,SAAS,CAACC,KAAK,IAAG;MAC3C,IAAIC,EAAE,GAAGC,MAAM,CAACF,KAAK,CAAC,IAAI,CAAC,CAAC;MAC5BG,OAAO,CAACC,GAAG,CAAC,aAAa,GAACH,EAAE,CAAC;MAE7B,IAAI,CAACI,mCAAmC,CAACJ,EAAE,CAAC;IAC9C,CAAC,CAAC;EAGJ;EAGAK,gBAAgB;IAEd,IAAI,CAACC,WAAW,CAACC,IAAI,GAAG,IAAI,CAACpB,iBAAiB,CAACqB,QAAQ,CAAC,OAAO,CAAC,CAACC,KAAK;IACtE,IAAI,CAACH,WAAW,CAACd,KAAK,GAAG,IAAI,CAACL,iBAAiB,CAACqB,QAAQ,CAAC,QAAQ,CAAC,CAACC,KAAK;IACxE,IAAI,CAACH,WAAW,CAACI,KAAK,GAAG,IAAI,CAACvB,iBAAiB,CAACqB,QAAQ,CAAC,QAAQ,CAAC,CAACC,KAAK;IACxE,IAAI,CAACH,WAAW,CAACK,MAAM,GAAG,IAAI,CAACxB,iBAAiB,CAACqB,QAAQ,CAAC,SAAS,CAAC,CAACC,KAAK;IAC1E,IAAI,CAACH,WAAW,CAACM,aAAa,GAAG,IAAI,CAACzB,iBAAiB,CAACqB,QAAQ,CAAC,MAAM,CAAC,CAACC,KAAK;IAE9E,IAAI,CAAC1B,eAAe,CAAC8B,cAAc,CAAC,IAAI,CAACP,WAAW,CAAC,CAACR,SAAS,CAAEgB,IAAI,IAAI;MACvEZ,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEW,IAAI,CAAC;IAChD,CAAC,CAAC;IAEF,IAAI,CAAC/B,eAAe,CAACgC,UAAU,CAAC,GAAG,CAAC;EACtC;EAGAX,mCAAmC,CAACJ,EAAW;IAE7C,IAAI,CAACjB,eAAe,CAACiC,eAAe,CAAChB,EAAE,CAAC,CAACF,SAAS,CAAEgB,IAAI,IAAI;MAC1D,IAAI,CAAC3B,iBAAiB,CAACqB,QAAQ,CAAC,OAAO,CAAC,CAACS,QAAQ,CAACH,IAAI,CAACP,IAAI,CAAC;MAC5D,IAAI,CAACpB,iBAAiB,CAACqB,QAAQ,CAAC,QAAQ,CAAC,CAACS,QAAQ,CAACH,IAAI,CAACtB,KAAK,CAAC;MAC9D,IAAI,CAACL,iBAAiB,CAACqB,QAAQ,CAAC,QAAQ,CAAC,CAACS,QAAQ,CAACH,IAAI,CAACJ,KAAK,CAAC;MAC9D,IAAI,CAACvB,iBAAiB,CAACqB,QAAQ,CAAC,SAAS,CAAC,CAACS,QAAQ,CAACH,IAAI,CAACH,MAAM,CAAC;MAChE,IAAI,CAACxB,iBAAiB,CAACqB,QAAQ,CAAC,MAAM,CAAC,CAACS,QAAQ,CAACH,IAAI,CAACF,aAAa,CAAC;IACtE,CAAC,CAAC;EACJ;CAED;AA3DYhC,uBAAuB,eALnCF,SAAS,CAAC;EACTwC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,GACWxC,uBAAuB,CA2DnC;SA3DYA,uBAAuB","names":["Component","Validators","CreateEmployeeComponent","constructor","formBuilder","employeeService","router","activatedRoute","ngOnInit","employeeFormGroup","group","name_","required","email_","email","phone_","maxLength","salary_","doj_","params","subscribe","param","id","Number","console","log","fetchAndInitializeValuesForUpdating","registerEmployee","newEmployee","name","controls","value","phone","salary","dateOfJoining","createEmployee","data","redirectTo","getEmployeeById","setValue","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Personal Projects\\self_learning\\springboot-practice-application\\spring-security-telugu\\src\\main\\webapp\\app\\components\\create-employee\\create-employee.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from '../../interfaces/employee';\nimport { EmployeeService } from '../../services/employee.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.scss']\n})\nexport class CreateEmployeeComponent implements OnInit{\n\n  newEmployee: Employee = {} as Employee;\n\n  employeeFormGroup! : FormGroup;\n  location: any;\n\n  constructor(private formBuilder :FormBuilder, private employeeService : EmployeeService, private router : Router, private activatedRoute : ActivatedRoute){\n\n  }\n  ngOnInit(){\n\n    this.employeeFormGroup = this.formBuilder.group({\n\n      name_ : ['', [ Validators.required]],\n      email_ : ['', [Validators.email,Validators.required]],\n      phone_ : ['', [Validators.maxLength(10)]],\n      salary_ : ['', [ Validators.required]],\n      doj_ : ['', [Validators.required]]\n    });\n\n    this.activatedRoute.params.subscribe(param => {\n      let id = Number(param['id']);\n      console.log('print id : '+id)\n\n      this.fetchAndInitializeValuesForUpdating(id);\n    })\n\n\n  }\n\n\n  registerEmployee(){\n    \n    this.newEmployee.name = this.employeeFormGroup.controls['name_'].value;\n    this.newEmployee.email = this.employeeFormGroup.controls['email_'].value;\n    this.newEmployee.phone = this.employeeFormGroup.controls['phone_'].value;\n    this.newEmployee.salary = this.employeeFormGroup.controls['salary_'].value;\n    this.newEmployee.dateOfJoining = this.employeeFormGroup.controls['doj_'].value;\n\n    this.employeeService.createEmployee(this.newEmployee).subscribe((data) =>{\n      console.log(\"Employee has been created\", data);\n    })\n\n    this.employeeService.redirectTo('/');\n  }\n\n\n  fetchAndInitializeValuesForUpdating(id : number){\n\n    this.employeeService.getEmployeeById(id).subscribe((data) => {\n      this.employeeFormGroup.controls['name_'].setValue(data.name);\n      this.employeeFormGroup.controls['email_'].setValue(data.email);\n      this.employeeFormGroup.controls['phone_'].setValue(data.phone);\n      this.employeeFormGroup.controls['salary_'].setValue(data.salary);\n      this.employeeFormGroup.controls['doj_'].setValue(data.dateOfJoining);\n    });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}