{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/employee.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction CreateEmployeeComponent_h3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1, \"Create New Employee\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEmployeeComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1, \"Update Employee Details\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEmployeeComponent_button_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function CreateEmployeeComponent_button_24_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.registerEmployee());\n    });\n    i0.ɵɵtext(1, \"REGISTER\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r3.employeeFormGroup.valid);\n  }\n}\nfunction CreateEmployeeComponent_ng_template_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function CreateEmployeeComponent_ng_template_25_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.registerEmployee());\n    });\n    i0.ɵɵtext(1, \"UPDATE\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r5.employeeFormGroup.valid);\n  }\n}\nexport class CreateEmployeeComponent {\n  constructor(formBuilder, employeeService, router, activatedRoute, location) {\n    this.formBuilder = formBuilder;\n    this.employeeService = employeeService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.location = location;\n    this.newEmployee = {};\n    this.fetchedId = 0;\n  }\n  ngOnInit() {\n    this.employeeFormGroup = this.formBuilder.group({\n      name_: ['', [Validators.required]],\n      email_: ['', [Validators.email, Validators.required]],\n      phone_: ['', [Validators.maxLength(10)]],\n      salary_: ['', [Validators.required]],\n      doj_: ['', [Validators.required]]\n    });\n    this.activatedRoute.params.subscribe(param => {\n      let id = Number(param['id']);\n      this.fetchedId = Number.isNaN(id) ? 0 : id;\n      console.log('print id : ' + this.fetchedId);\n    });\n    if (this.fetchedId !== null && this.fetchedId !== 0) {\n      this.fetchAndInitializeValuesForUpdating(this.fetchedId);\n    }\n  }\n  registerEmployee() {\n    if (this.newEmployee) {\n      this.newEmployee.name = this.employeeFormGroup.controls['name_'].value;\n      this.newEmployee.email = this.employeeFormGroup.controls['email_'].value;\n      this.newEmployee.phone = this.employeeFormGroup.controls['phone_'].value;\n      this.newEmployee.salary = this.employeeFormGroup.controls['salary_'].value;\n      this.newEmployee.dateOfJoining = this.employeeFormGroup.controls['doj_'].value;\n      this.employeeService.createEmployee(this.newEmployee).subscribe(data => {\n        console.log(\"Employee has been created\", data);\n      });\n    }\n    this.location.back();\n    w;\n  }\n  fetchAndInitializeValuesForUpdating(id) {\n    this.employeeService.getEmployeeById(id).subscribe(data => {\n      this.newEmployee = data;\n      console.log('Fetched Employee Details Based On Id' + id + \"   \" + JSON.stringify(this.newEmployee));\n      this.employeeFormGroup.controls['name_'].setValue(data.name);\n      this.employeeFormGroup.controls['email_'].setValue(data.email);\n      this.employeeFormGroup.controls['phone_'].setValue(data.phone);\n      this.employeeFormGroup.controls['salary_'].setValue(data.salary);\n      this.employeeFormGroup.controls['doj_'].setValue(data.dateOfJoining);\n    });\n  }\n  static #_ = this.ɵfac = function CreateEmployeeComponent_Factory(t) {\n    return new (t || CreateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Location));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateEmployeeComponent,\n    selectors: [[\"app-create-employee\"]],\n    decls: 27,\n    vars: 5,\n    consts: [[3, \"formGroup\"], [4, \"ngIf\", \"ngIfElse\"], [\"modify\", \"\"], [1, \"form-group\", \"row\", \"mb-3\"], [\"for\", \"name\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"enter your name\", \"formControlName\", \"name_\", 1, \"form-control\", \"col-sm-3\"], [\"for\", \"mail\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"email\", \"id\", \"mail\", \"placeholder\", \"enter your email\", \"formControlName\", \"email_\", 1, \"form-control\", \"col-sm-3\"], [\"for\", \"phone\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"number\", \"id\", \"phone\", \"placeholder\", \"enter your phone number\", \"formControlName\", \"phone_\", 1, \"form-control\", \"col-sm-3\"], [\"for\", \"salary\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"number\", \"id\", \"salary\", \"placeholder\", \"enter your salary\", \"formControlName\", \"salary_\", 1, \"form-control\", \"col-sm-3\"], [\"for\", \"doj\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"date\", \"id\", \"doj\", \"placeholder\", \"select date of joining\", \"formControlName\", \"doj_\", 1, \"form-control\", \"col-sm-3\"], [\"type\", \"button\", \"class\", \"btn btn-primary\", \"data-toggle\", \"button\", \"aria-pressed\", \"false\", \"autocomplete\", \"off\", 3, \"disabled\", \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"updating\", \"\"], [\"type\", \"button\", \"data-toggle\", \"button\", \"aria-pressed\", \"false\", \"autocomplete\", \"off\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"]],\n    template: function CreateEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵtemplate(1, CreateEmployeeComponent_h3_1_Template, 2, 0, \"h3\", 1);\n        i0.ɵɵtemplate(2, CreateEmployeeComponent_ng_template_2_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Full Name : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Email : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Phone : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\", 10);\n        i0.ɵɵtext(18, \"Salary : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 12);\n        i0.ɵɵtext(22, \"DOJ\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, CreateEmployeeComponent_button_24_Template, 2, 1, \"button\", 14);\n        i0.ɵɵtemplate(25, CreateEmployeeComponent_ng_template_25_Template, 2, 1, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n        const _r4 = i0.ɵɵreference(26);\n        i0.ɵɵproperty(\"formGroup\", ctx.employeeFormGroup);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.fetchedId === 0)(\"ngIfElse\", _r1);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngIf\", ctx.fetchedId == 0)(\"ngIfElse\", _r4);\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"form[_ngcontent-%COMP%] {\\n  text-align: left;\\n  margin-left: 35%;\\n  margin-right: 10%;\\n  margin-top: 2%;\\n  letter-spacing: 1px;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.2);\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  padding-top: 3%;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  padding: 5px 30px;\\n  text-align: center;\\n  margin-left: 15%;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  margin-left: 25px;\\n  text-transform: capitalize;\\n  color: green;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvY29tcG9uZW50cy9jcmVhdGUtZW1wbG95ZWUvY3JlYXRlLWVtcGxveWVlLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vUGVyc29uYWwlMjBQcm9qZWN0cy9zZWxmX2xlYXJuaW5nL3NwcmluZ2Jvb3QtcHJhY3RpY2UtYXBwbGljYXRpb24vc3ByaW5nLXNlY3VyaXR5LXRlbHVndS9zcmMvbWFpbi93ZWJhcHAvYXBwL2NvbXBvbmVudHMvY3JlYXRlLWVtcGxveWVlL2NyZWF0ZS1lbXBsb3llZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxtQkFBQTtBQ0FKOztBREdBO0VBQ0ksMENBQUE7QUNBSjs7QURJQTtFQUNJLGdCQUFBO0FDREo7O0FESUE7RUFDSSxlQUFBO0FDREo7O0FESUE7RUFDSSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUNESjs7QURJQTtFQUNJLGlCQUFBO0VBQ0EsMEJBQUE7RUFDQSxZQUFBO0FDREoiLCJzb3VyY2VzQ29udGVudCI6WyJmb3Jte1xyXG4gICAgLy8gYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDM1JTtcclxuICAgIG1hcmdpbi1yaWdodDogMTAlO1xyXG4gICAgbWFyZ2luLXRvcDogMiU7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG59XHJcblxyXG5pbnB1dHtcclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuXHJcbn1cclxuXHJcbmxhYmVse1xyXG4gICAgZm9udC13ZWlnaHQ6NTAwO1xyXG59XHJcblxyXG4uZm9ybS1ncm91cHtcclxuICAgIHBhZGRpbmctdG9wOiAzJTtcclxufVxyXG5cclxuYnV0dG9ue1xyXG4gICAgcGFkZGluZzogNXB4IDMwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tbGVmdDogMTUlO1xyXG59XHJcblxyXG5oM3tcclxuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06Y2FwaXRhbGl6ZTtcclxuICAgIGNvbG9yOiBncmVlbjtcclxufSIsImZvcm0ge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBtYXJnaW4tbGVmdDogMzUlO1xuICBtYXJnaW4tcmlnaHQ6IDEwJTtcbiAgbWFyZ2luLXRvcDogMiU7XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG59XG5cbmlucHV0IHtcbiAgYm94LXNoYWRvdzogMHB4IDBweCAxcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xufVxuXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5mb3JtLWdyb3VwIHtcbiAgcGFkZGluZy10b3A6IDMlO1xufVxuXG5idXR0b24ge1xuICBwYWRkaW5nOiA1cHggMzBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tbGVmdDogMTUlO1xufVxuXG5oMyB7XG4gIG1hcmdpbi1sZWZ0OiAyNXB4O1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgY29sb3I6IGdyZWVuO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","CreateEmployeeComponent","constructor","formBuilder","employeeService","router","activatedRoute","location","ngOnInit","employeeFormGroup","group","name_","required","email_","email","phone_","maxLength","salary_","doj_","params","subscribe","param","id","Number","fetchedId","isNaN","console","log","fetchAndInitializeValuesForUpdating","registerEmployee","newEmployee","name","controls","value","phone","salary","dateOfJoining","createEmployee","data","back","w","getEmployeeById","JSON","stringify","setValue","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Personal Projects\\self_learning\\springboot-practice-application\\spring-security-telugu\\src\\main\\webapp\\app\\components\\create-employee\\create-employee.component.ts","C:\\Personal Projects\\self_learning\\springboot-practice-application\\spring-security-telugu\\src\\main\\webapp\\app\\components\\create-employee\\create-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from '../../interfaces/employee';\nimport { EmployeeService } from '../../services/employee.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.scss']\n})\nexport class CreateEmployeeComponent implements OnInit{\n\n  newEmployee: Employee = {} as Employee;\n  fetchedId : number = 0;\n\n  employeeFormGroup! : FormGroup;\n\n  constructor(private formBuilder :FormBuilder, private employeeService : EmployeeService, private router : Router, private activatedRoute : ActivatedRoute, private location : Location){\n\n  }\n  ngOnInit(){\n\n\n    \n\n    this.employeeFormGroup = this.formBuilder.group({\n\n      name_ : ['', [ Validators.required]],\n      email_ : ['', [Validators.email,Validators.required]],\n      phone_ : ['', [Validators.maxLength(10)]],\n      salary_ : ['', [ Validators.required]],\n      doj_ : ['', [Validators.required]]\n    });\n\n    this.activatedRoute.params.subscribe(param => {\n      let id = Number(param['id']);\n      this.fetchedId = Number.isNaN(id) ? 0 : id;\n      console.log('print id : '+this.fetchedId)\n\n    })\n\n    if(this.fetchedId !== null && this.fetchedId !== 0){\n      this.fetchAndInitializeValuesForUpdating(this.fetchedId);\n\n    }\n\n  }\n\n\n  registerEmployee(){\n    \n    if(this.newEmployee){\n      this.newEmployee.name = this.employeeFormGroup.controls['name_'].value;\n      this.newEmployee.email = this.employeeFormGroup.controls['email_'].value;\n      this.newEmployee.phone = this.employeeFormGroup.controls['phone_'].value;\n      this.newEmployee.salary = this.employeeFormGroup.controls['salary_'].value;\n      this.newEmployee.dateOfJoining = this.employeeFormGroup.controls['doj_'].value;\n  \n      this.employeeService.createEmployee(this.newEmployee).subscribe((data) =>{\n        console.log(\"Employee has been created\", data);\n      })\n    }\n\n\n    this.location.back();\n    w\n  }\n\n\n  fetchAndInitializeValuesForUpdating(id : number){\n\n    this.employeeService.getEmployeeById(id).subscribe((data) => {\n\n      this.newEmployee = data;\n\n      console.log('Fetched Employee Details Based On Id'+id+ \"   \"+JSON.stringify(this.newEmployee));\n\n      this.employeeFormGroup.controls['name_'].setValue(data.name);\n      this.employeeFormGroup.controls['email_'].setValue(data.email);\n      this.employeeFormGroup.controls['phone_'].setValue(data.phone);\n      this.employeeFormGroup.controls['salary_'].setValue(data.salary);\n      this.employeeFormGroup.controls['doj_'].setValue(data.dateOfJoining);\n    });\n  }\n\n}\n","<form [formGroup]=\"employeeFormGroup\">\n    <h3  *ngIf=\"fetchedId === 0; else modify\">Create New Employee</h3>\n    <ng-template #modify>\n        <h3>Update Employee Details</h3>\n    </ng-template>\n    <div class=\"form-group row mb-3\">\n        <label class=\"col-form-label col-sm-2\" for=\"name\">Full Name : </label>\n        <input type=\"text\" class=\"form-control col-sm-3\" id=\"name\" placeholder=\"enter your name\" formControlName=\"name_\">\n    </div>\n    <div class=\"form-group row mb-3\">\n        <label class=\"col-form-label col-sm-2\" for=\"mail\">Email : </label>\n        <input type=\"email\" id=\"mail\" class=\"form-control col-sm-3\" placeholder=\"enter your email\" formControlName=\"email_\">\n    </div>\n    <div class=\"form-group row mb-3\">\n        <label class=\"col-form-label col-sm-2\" for=\"phone\">Phone : </label>\n        <input type=\"number\" id=\"phone\" class=\"form-control col-sm-3\" placeholder=\"enter your phone number\" formControlName=\"phone_\">\n    </div>\n\n    <div class=\"form-group row mb-3\">\n        <label class=\"col-form-label col-sm-2\" for=\"salary\">Salary : </label>\n        <input type=\"number\" id=\"salary\" class=\"form-control col-sm-3\" placeholder=\"enter your salary\" formControlName=\"salary_\">\n    </div>\n    <div class=\"form-group row mb-3\">\n        <label class=\"col-form-label col-sm-2\" for=\"doj\">DOJ</label>\n        <input type=\"date\" id=\"doj\" class=\"form-control col-sm-3\" placeholder=\"select date of joining\" formControlName=\"doj_\">\n    </div>\n\n    <button *ngIf=\"fetchedId == 0; else updating\"   type=\"button\" class=\"btn btn-primary\" [disabled]=\"!employeeFormGroup.valid\" (click)=\"registerEmployee()\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\">REGISTER</button>\n    <ng-template #updating>\n        <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!employeeFormGroup.valid\" (click)=\"registerEmployee()\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\">UPDATE</button>\n    </ng-template>\n\n\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}