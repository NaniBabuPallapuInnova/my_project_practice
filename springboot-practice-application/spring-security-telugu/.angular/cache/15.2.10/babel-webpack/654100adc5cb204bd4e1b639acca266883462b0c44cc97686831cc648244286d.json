{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/employee.service\";\nimport * as i3 from \"@angular/router\";\nexport class CreateEmployeeComponent {\n  constructor(formBuilder, employeeService, router, activatedRoute) {\n    this.formBuilder = formBuilder;\n    this.employeeService = employeeService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.newEmployee = {};\n  }\n  ngOnInit() {\n    this.employeeFormGroup = this.formBuilder.group({\n      name_: ['', [Validators.required]],\n      email_: ['', [Validators.email, Validators.required]],\n      phone_: ['', [Validators.maxLength(10)]],\n      salary_: ['', [Validators.required]],\n      doj_: ['', [Validators.required]]\n    });\n    this.activatedRoute.params.subscribe(param => {\n      let id = Number(param['id']);\n      console.log('print id : ' + id);\n      this.fetchAndInitializeValuesForUpdating(id);\n    });\n  }\n  registerEmployee() {\n    this.newEmployee.name = this.employeeFormGroup.controls['name_'].value;\n    this.newEmployee.email = this.employeeFormGroup.controls['email_'].value;\n    this.newEmployee.phone = this.employeeFormGroup.controls['phone_'].value;\n    this.newEmployee.salary = this.employeeFormGroup.controls['salary_'].value;\n    this.newEmployee.dateOfJoining = this.employeeFormGroup.controls['doj_'].value;\n    this.employeeService.createEmployee(this.newEmployee).subscribe(data => {\n      console.log(\"Employee has been created\", data);\n    });\n    this.employeeService.redirectTo('/');\n  }\n  fetchAndInitializeValuesForUpdating(id) {\n    this.employeeService.getEmployeeById(id).subscribe(data => {\n      this.employeeFormGroup.controls['name_'].setValue(data.name);\n      this.employeeFormGroup.controls['email_'].setValue(data.email);\n      this.employeeFormGroup.controls['phone_'].setValue(data.phone);\n      this.employeeFormGroup.controls['salary_'];\n    });\n  }\n  static #_ = this.ɵfac = function CreateEmployeeComponent_Factory(t) {\n    return new (t || CreateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateEmployeeComponent,\n    selectors: [[\"app-create-employee\"]],\n    decls: 25,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [1, \"form-group\", \"row\", \"mb-3\"], [\"for\", \"name\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"enter your name\", \"formControlName\", \"name_\", 1, \"form-control\", \"col-sm-3\"], [\"for\", \"mail\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"email\", \"id\", \"mail\", \"placeholder\", \"enter your email\", \"formControlName\", \"email_\", 1, \"form-control\", \"col-sm-3\"], [\"for\", \"phone\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"number\", \"id\", \"phone\", \"placeholder\", \"enter your phone number\", \"formControlName\", \"phone_\", 1, \"form-control\", \"col-sm-3\"], [\"for\", \"salary\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"number\", \"id\", \"salary\", \"placeholder\", \"enter your salary\", \"formControlName\", \"salary_\", 1, \"form-control\", \"col-sm-3\"], [\"for\", \"doj\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"date\", \"id\", \"doj\", \"placeholder\", \"select date of joining\", \"formControlName\", \"doj_\", 1, \"form-control\", \"col-sm-3\"], [\"type\", \"button\", \"data-toggle\", \"button\", \"aria-pressed\", \"false\", \"autocomplete\", \"off\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"]],\n    template: function CreateEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"h3\");\n        i0.ɵɵtext(2, \"Create New Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Full Name : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"Email : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 6);\n        i0.ɵɵtext(13, \"Phone : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 8);\n        i0.ɵɵtext(17, \"Salary : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 1)(20, \"label\", 10);\n        i0.ɵɵtext(21, \"DOJ\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function CreateEmployeeComponent_Template_button_click_23_listener() {\n          return ctx.registerEmployee();\n        });\n        i0.ɵɵtext(24, \"REGISTER\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.employeeFormGroup);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"disabled\", !ctx.employeeFormGroup.valid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"form[_ngcontent-%COMP%] {\\n  text-align: left;\\n  margin-left: 35%;\\n  margin-right: 10%;\\n  margin-top: 2%;\\n  letter-spacing: 1px;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.2);\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  padding-top: 3%;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  padding: 5px 30px;\\n  text-align: center;\\n  margin-left: 15%;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  margin-left: 25px;\\n  text-transform: capitalize;\\n  color: green;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluL3dlYmFwcC9hcHAvY29tcG9uZW50cy9jcmVhdGUtZW1wbG95ZWUvY3JlYXRlLWVtcGxveWVlLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vUGVyc29uYWwlMjBQcm9qZWN0cy9zZWxmX2xlYXJuaW5nL3NwcmluZ2Jvb3QtcHJhY3RpY2UtYXBwbGljYXRpb24vc3ByaW5nLXNlY3VyaXR5LXRlbHVndS9zcmMvbWFpbi93ZWJhcHAvYXBwL2NvbXBvbmVudHMvY3JlYXRlLWVtcGxveWVlL2NyZWF0ZS1lbXBsb3llZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxtQkFBQTtBQ0FKOztBREdBO0VBQ0ksMENBQUE7QUNBSjs7QURJQTtFQUNJLGdCQUFBO0FDREo7O0FESUE7RUFDSSxlQUFBO0FDREo7O0FESUE7RUFDSSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUNESjs7QURJQTtFQUNJLGlCQUFBO0VBQ0EsMEJBQUE7RUFDQSxZQUFBO0FDREoiLCJzb3VyY2VzQ29udGVudCI6WyJmb3Jte1xyXG4gICAgLy8gYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDM1JTtcclxuICAgIG1hcmdpbi1yaWdodDogMTAlO1xyXG4gICAgbWFyZ2luLXRvcDogMiU7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG59XHJcblxyXG5pbnB1dHtcclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuXHJcbn1cclxuXHJcbmxhYmVse1xyXG4gICAgZm9udC13ZWlnaHQ6NTAwO1xyXG59XHJcblxyXG4uZm9ybS1ncm91cHtcclxuICAgIHBhZGRpbmctdG9wOiAzJTtcclxufVxyXG5cclxuYnV0dG9ue1xyXG4gICAgcGFkZGluZzogNXB4IDMwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tbGVmdDogMTUlO1xyXG59XHJcblxyXG5oM3tcclxuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06Y2FwaXRhbGl6ZTtcclxuICAgIGNvbG9yOiBncmVlbjtcclxufSIsImZvcm0ge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBtYXJnaW4tbGVmdDogMzUlO1xuICBtYXJnaW4tcmlnaHQ6IDEwJTtcbiAgbWFyZ2luLXRvcDogMiU7XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG59XG5cbmlucHV0IHtcbiAgYm94LXNoYWRvdzogMHB4IDBweCAxcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xufVxuXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5mb3JtLWdyb3VwIHtcbiAgcGFkZGluZy10b3A6IDMlO1xufVxuXG5idXR0b24ge1xuICBwYWRkaW5nOiA1cHggMzBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tbGVmdDogMTUlO1xufVxuXG5oMyB7XG4gIG1hcmdpbi1sZWZ0OiAyNXB4O1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgY29sb3I6IGdyZWVuO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","CreateEmployeeComponent","constructor","formBuilder","employeeService","router","activatedRoute","ngOnInit","employeeFormGroup","group","name_","required","email_","email","phone_","maxLength","salary_","doj_","params","subscribe","param","id","Number","console","log","fetchAndInitializeValuesForUpdating","registerEmployee","newEmployee","name","controls","value","phone","salary","dateOfJoining","createEmployee","data","redirectTo","getEmployeeById","setValue","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Personal Projects\\self_learning\\springboot-practice-application\\spring-security-telugu\\src\\main\\webapp\\app\\components\\create-employee\\create-employee.component.ts","C:\\Personal Projects\\self_learning\\springboot-practice-application\\spring-security-telugu\\src\\main\\webapp\\app\\components\\create-employee\\create-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from '../../interfaces/employee';\nimport { EmployeeService } from '../../services/employee.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.scss']\n})\nexport class CreateEmployeeComponent implements OnInit{\n\n  newEmployee: Employee = {} as Employee;\n\n  employeeFormGroup! : FormGroup;\n  location: any;\n\n  constructor(private formBuilder :FormBuilder, private employeeService : EmployeeService, private router : Router, private activatedRoute : ActivatedRoute){\n\n  }\n  ngOnInit(){\n\n    this.employeeFormGroup = this.formBuilder.group({\n\n      name_ : ['', [ Validators.required]],\n      email_ : ['', [Validators.email,Validators.required]],\n      phone_ : ['', [Validators.maxLength(10)]],\n      salary_ : ['', [ Validators.required]],\n      doj_ : ['', [Validators.required]]\n    });\n\n    this.activatedRoute.params.subscribe(param => {\n      let id = Number(param['id']);\n      console.log('print id : '+id)\n\n      this.fetchAndInitializeValuesForUpdating(id);\n    })\n\n\n  }\n\n\n  registerEmployee(){\n    \n    this.newEmployee.name = this.employeeFormGroup.controls['name_'].value;\n    this.newEmployee.email = this.employeeFormGroup.controls['email_'].value;\n    this.newEmployee.phone = this.employeeFormGroup.controls['phone_'].value;\n    this.newEmployee.salary = this.employeeFormGroup.controls['salary_'].value;\n    this.newEmployee.dateOfJoining = this.employeeFormGroup.controls['doj_'].value;\n\n    this.employeeService.createEmployee(this.newEmployee).subscribe((data) =>{\n      console.log(\"Employee has been created\", data);\n    })\n\n    this.employeeService.redirectTo('/');\n  }\n\n\n  fetchAndInitializeValuesForUpdating(id : number){\n\n    this.employeeService.getEmployeeById(id).subscribe((data) => {\n      this.employeeFormGroup.controls['name_'].setValue(data.name);\n      this.employeeFormGroup.controls['email_'].setValue(data.email);\n      this.employeeFormGroup.controls['phone_'].setValue(data.phone);\n      this.employeeFormGroup.controls['salary_']\n    });\n  }\n\n}\n","<form [formGroup]=\"employeeFormGroup\">\n    <h3>Create New Employee</h3>\n    <div class=\"form-group row mb-3\">\n        <label class=\"col-form-label col-sm-2\" for=\"name\">Full Name : </label>\n        <input type=\"text\" class=\"form-control col-sm-3\" id=\"name\" placeholder=\"enter your name\" formControlName=\"name_\">\n    </div>\n    <div class=\"form-group row mb-3\">\n        <label class=\"col-form-label col-sm-2\" for=\"mail\">Email : </label>\n        <input type=\"email\" id=\"mail\" class=\"form-control col-sm-3\" placeholder=\"enter your email\" formControlName=\"email_\">\n    </div>\n    <div class=\"form-group row mb-3\">\n        <label class=\"col-form-label col-sm-2\" for=\"phone\">Phone : </label>\n        <input type=\"number\" id=\"phone\" class=\"form-control col-sm-3\" placeholder=\"enter your phone number\" formControlName=\"phone_\">\n    </div>\n\n    <div class=\"form-group row mb-3\">\n        <label class=\"col-form-label col-sm-2\" for=\"salary\">Salary : </label>\n        <input type=\"number\" id=\"salary\" class=\"form-control col-sm-3\" placeholder=\"enter your salary\" formControlName=\"salary_\">\n    </div>\n    <div class=\"form-group row mb-3\">\n        <label class=\"col-form-label col-sm-2\" for=\"doj\">DOJ</label>\n        <input type=\"date\" id=\"doj\" class=\"form-control col-sm-3\" placeholder=\"select date of joining\" formControlName=\"doj_\">\n    </div>\n\n    <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!employeeFormGroup.valid\" (click)=\"registerEmployee()\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\">REGISTER</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}