OAuth 2.0
=========
OAuth 2.0, which stands for "Open Authorization", is a standard designed to allow
a website or application to access resources hosted by other web apps on behalf of a user.

* OAuth 2.0 is an authorization protocol and NOT an authentication protocol.
* It is designed primarily as a means of granting access to a set of resources, for example, remote APIs or user's data.
* OAuth 2.0 uses Access Tokens.

OAuth 2.0 Roles
================
* Resource Owner
* Client
* Authorization Server
* Resource Server

Resource Owner        : The user or system that owns the protected resources and can grant access to them.

Client                : The client is the system that requires access to the protected resources.
                        To access resources, the Client must hold the appropriate Access Token.

Authorization Server  : This server receives requests from the Client for Access Token
                        and issues them upon successful authentication and consent by the Resource Owner.

Resource Server       : A server that protects the user's resource an receives access requests from the Client.
                        It accepts and validates an Access Token from the Client and returns the appropriate
                        resources to it.


OAuth 2.0 Scopes
================
Scopes are an important concept in OAuth 2.0.

They are used to specify exactly the reason for which access to resource may be granted.


Abstract Protocol Flow
========================


             ------------ 1.Authorization Request -------------->
   A                                                                       User
   P                                                                 (Resource Owner)
   P         <----------- 2.Authorization Grant -----------------
   L
   I
   C         ------------ 3.Authorization Grant ----------------->
   A                                                                 Authorization Server
   T         <----------- 4. Access Token ------------------------
   I
   O
   N         ------------ 5. Access Token ----------------------->
(client)                                                             Resource Server
             <----------- 6.Protected Resource -------------------


                                                                      SERVICE API

